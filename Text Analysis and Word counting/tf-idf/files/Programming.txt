Once the game's initial design has been agreed upon, the development language must be decided upon. The choice depends upon many factors, such as language familiarity of the programming staff, target platforms, the execution speed requirements and the language of any game engines, APIs or libraries being used.

For personal computers, the language selected may be little more than a matter of preference. Language bindings for popular libraries such as SDL and Allegro are widespread, and the performance gap between idiomatic code written in modern compiled languages is negligible. The most popular languages are usually procedural/object-oriented and implemented via compilers; for example, C, C++, and Java. However, developers may take into account domain-specific features, such as interfacing with the operating system, and resilience to reverse engineering for online video games. Many games are not written in one language exclusively, and may combine two or more languages; For example, Unity, a popular game engine, has different pieces written in C, C++, and C#.

For consoles, the support of the target platform is usually the most considered factor. In the past, video games for consoles were written almost exclusively in assembly due to limited resources in terms of both storage and processing speed. However, as technology has advanced, so have the options for game development on consoles. Nintendo, Microsoft, and Sony all have differing SDKs for their Wii U, Nintendo Switch, Xbox One, and PlayStation 4 consoles, respectively.

High-level scripting languages are increasingly being used as embedded extensions to the underlying game written in a compiled programming language, for the convenience of both the original developer and anyone who would wish to mod the game. Lua is a very popular choice, as its API is written in ANSI C and the language is designed to be embedded into other applications. Many developers have created custom languages altogether for their games, such as id Software's QuakeC and Epic Games' UnrealScript.
